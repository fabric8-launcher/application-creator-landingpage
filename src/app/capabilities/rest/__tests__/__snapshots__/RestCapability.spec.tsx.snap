// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RestCapability /> check that a click on the GET button adds a Hello World message in the console 1`] = `
<CapabilityCard
  module="rest"
>
  <Component>
    <PlugIcon
      className="with-text"
      color="currentColor"
      size="sm"
      title={null}
    />
     
    HTTP APIs
  </Component>
  <Component>
    <Grid
      className=""
      gutter={null}
      lg={null}
      md={null}
      sm={null}
      span={null}
      xl={null}
    >
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        HTTP API endpoints expose your application to outside callers. Through these, programs may communicate over the network in a language-independent fashion. We have created an initial set of endpoints to illustrate how you may accomplish this in your selected runtime. By composing together HTTP endpoints and making use of hypermedia and links, you may follow these patterns to construct a RESTful architecture.
      </GridItem>
      <Component />
      <GridItem
        className="http-request-service"
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestTitle>
          <SourceMappingLink
            fileRepositoryLocation="src/main/java/org/your/GreetingApi.java"
            name="greetingEndpoint"
          />
        </RequestTitle>
      </GridItem>
      <HttpRequest
        curlCommand="curl -X GET 'http://mocked.io/api/greeting'"
        method="GET"
        onExecute={[Function]}
        path="/api/greeting?name="
      >
        <TextInput
          aria-label={null}
          className="http-request-param"
          id="http-api-param-name-input"
          isDisabled={false}
          isReadOnly={false}
          isRequired={false}
          isValid={true}
          name="name"
          onChange={[Function]}
          placeholder="World"
          type="text"
          value=""
        />
      </HttpRequest>
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestConsole
          id="rest-content"
          results={
            Array [
              Object {
                "content": "Hello World!",
                "method": "GET",
                "time": 1542793377,
                "url": "http://mocked.io/api/greeting",
              },
            ]
          }
        />
      </GridItem>
    </Grid>
  </Component>
</CapabilityCard>
`;

exports[`<RestCapability /> check that after typing a name, a click on the GET button adds a Hello John message in the console 1`] = `
<CapabilityCard
  module="rest"
>
  <Component>
    <PlugIcon
      className="with-text"
      color="currentColor"
      size="sm"
      title={null}
    />
     
    HTTP APIs
  </Component>
  <Component>
    <Grid
      className=""
      gutter={null}
      lg={null}
      md={null}
      sm={null}
      span={null}
      xl={null}
    >
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        HTTP API endpoints expose your application to outside callers. Through these, programs may communicate over the network in a language-independent fashion. We have created an initial set of endpoints to illustrate how you may accomplish this in your selected runtime. By composing together HTTP endpoints and making use of hypermedia and links, you may follow these patterns to construct a RESTful architecture.
      </GridItem>
      <Component />
      <GridItem
        className="http-request-service"
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestTitle>
          <SourceMappingLink
            fileRepositoryLocation="src/main/java/org/your/GreetingApi.java"
            name="greetingEndpoint"
          />
        </RequestTitle>
      </GridItem>
      <HttpRequest
        curlCommand="curl -X GET 'http://mocked.io/api/greeting?name=John'"
        method="GET"
        onExecute={[Function]}
        path="/api/greeting?name="
      >
        <TextInput
          aria-label={null}
          className="http-request-param"
          id="http-api-param-name-input"
          isDisabled={false}
          isReadOnly={false}
          isRequired={false}
          isValid={true}
          name="name"
          onChange={[Function]}
          placeholder="World"
          type="text"
          value="John"
        />
      </HttpRequest>
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestConsole
          id="rest-content"
          results={
            Array [
              Object {
                "content": "Hello John!",
                "method": "GET",
                "time": 1542793377,
                "url": "http://mocked.io/api/greeting?name=John",
              },
            ]
          }
        />
      </GridItem>
    </Grid>
  </Component>
</CapabilityCard>
`;

exports[`<RestCapability /> check that initial render is correct 1`] = `
<CapabilityCard
  module="rest"
>
  <Component>
    <PlugIcon
      className="with-text"
      color="currentColor"
      size="sm"
      title={null}
    />
     
    HTTP APIs
  </Component>
  <Component>
    <Grid
      className=""
      gutter={null}
      lg={null}
      md={null}
      sm={null}
      span={null}
      xl={null}
    >
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        HTTP API endpoints expose your application to outside callers. Through these, programs may communicate over the network in a language-independent fashion. We have created an initial set of endpoints to illustrate how you may accomplish this in your selected runtime. By composing together HTTP endpoints and making use of hypermedia and links, you may follow these patterns to construct a RESTful architecture.
      </GridItem>
      <Component />
      <GridItem
        className="http-request-service"
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestTitle>
          <SourceMappingLink
            fileRepositoryLocation="src/main/java/org/your/GreetingApi.java"
            name="greetingEndpoint"
          />
        </RequestTitle>
      </GridItem>
      <HttpRequest
        curlCommand="curl -X GET 'http://mocked.io/api/greeting'"
        method="GET"
        onExecute={[Function]}
        path="/api/greeting?name="
      >
        <TextInput
          aria-label={null}
          className="http-request-param"
          id="http-api-param-name-input"
          isDisabled={false}
          isReadOnly={false}
          isRequired={false}
          isValid={true}
          name="name"
          onChange={[Function]}
          placeholder="World"
          type="text"
          value=""
        />
      </HttpRequest>
      <GridItem
        className=""
        lg={null}
        lgOffset={null}
        lgRowSpan={null}
        md={null}
        mdOffset={null}
        mdRowSpan={null}
        offset={null}
        rowSpan={null}
        sm={null}
        smOffset={null}
        smRowSpan={null}
        span={12}
        xl={null}
        xlOffset={null}
        xlRowSpan={null}
      >
        <RequestConsole
          id="rest-content"
          results={Array []}
        />
      </GridItem>
    </Grid>
  </Component>
</CapabilityCard>
`;
